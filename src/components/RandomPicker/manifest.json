{
  "displayName": "Random Picker",
  "defaultWidth": 160,
  "defaultHeight": 45,
  "resizeX": true,
  "resizeY": true,
  "components": "./index.js",
  "icon": "./thumbnail.png",
  "props": [
    {
      "name": "listOfDataSource",
      "displayName": "Collection",
      "helpText": "One of the items will be picked up randomly.",
      "type": "list"
    },
    {
      "name": "itemOfDataSourceList",
      "displayName": "Display Text",
      "type": "text",
      "role": "listItem",
      "reference": "listOfDataSource"
    },
    {
      "name": "notFoundText",
      "displayName": "Not Found Text",
      "helpText": "Set a default 'Not Found' text when there is no available item in your list. (Default: 'Not Found')",
      "type": "text"
    },
    {
      "name": "actionType",
      "displayName": "What happens when the user clicks on the component?",
      "type": "number",
      "default": 10,
      "control": {
        "type": "menu",
        "options": [
          { "label": "Trigger Click Actions", "value": 10 },
          { "label": "Pick a new item", "value": 20 }
        ]
      }
    },
    {
      "name": "clickActions",
      "displayName": "Click Actions",
      "type": "action",
      "role": "listItem",
      "reference": "listOfDataSource",
      "arguments": [
        {
          "type": "text",
          "displayName": "Random Item on Click"
        }
      ],
      "enabled": {
        "actionType": 10
      }
    },
    {
      "name": "enableRemoveDuplicatesOnRefresh",
      "displayName": "Remove duplicates?",
      "helpText": "Remove the item already shown from the list. When you refresh or move to a screen, it will reset all values. You cannot trigger any action when there is nothing to show.",
      "type": "boolean",
      "default": false,
      "enabled": {
        "actionType": 20
      }
    },
    {
      "name": "introText",
      "displayName": "Intro Text",
      "helpText": "Set an intro message on the component before clicking. (Default: Click To Start)",
      "type": "text",
      "enabled": {
        "actionType": 20
      }
    },
    {
      "name": "refreshActions",
      "displayName": "Actions after refresh",
      "helpText": "The actions will be triggered after the component is refreshed.",
      "type": "action",
      "role": "listItem",
      "reference": "listOfDataSource",
      "arguments": [
        {
          "type": "text",
          "displayName": "Random Item on Refresh"
        }
      ],
      "enabled": {
        "actionType": 20
      }
    }
    ],
    "childComponents": [
      {
        "name": "styleOptions",
        "displayName": "Styles",
        "props": [
          {
            "name": "textSize",
            "displayName": "Text Size",
            "type": "number",
            "default": 15,
            "control": {
              "type": "slider",
              "min": 1,
              "max": 80
            }
          },
          {
            "name": "backgroundColor",
            "displayName": "Background Color",
            "type": "color",
            "default": "@primary"
          },
          {
            "name": "textColor",
            "displayName": "Text Color",
            "type": "color",
            "default": "@contrast:backgroundColor"
          },
          {
            "name": "fontWeight",
            "displayName": "Font Weight",
            "type": "text",
            "default": "bold",
            "control": {
              "type": "menu",
              "options": [
                { "label": "Bold", "value": "bold" },
                { "label": "Normal", "value": "normal" }
              ]
            }
          },
          {
            "name": "textPadding",
            "displayName": "Padding",
            "type": "number",
            "default": 10,
            "control": {
              "type": "slider",
              "min": 0,
              "max": 30
            }
          },
          {
            "name": "textTransform",
            "displayName": "Capitalization",
            "type": "text",
            "default": "none",
            "control": {
              "type": "menu",
              "options": [
                { "label": "None", "value": "none" },
                { "label": "Capitalize", "value": "capitalize" },
                { "label": "Uppercase", "value": "uppercase" },
                { "label": "Lowercase", "value": "lowercase" }
              ]
            }
          },
          {
            "name": "borderRadius",
            "displayName": "Rounding",
            "type": "number",
            "default": 4,
            "control": {
              "type": "slider",
              "min": 0,
              "max": 150
            }
          },
          {
            "name": "enableShadow",
            "displayName": "Shadow",
            "type": "boolean",
            "default": true
          },
          {
            "name": "enableBorderWidth",
            "displayName": "Border",
            "type": "boolean",
            "default": false
          },
          {
            "name": "borderWidth",
            "displayName": "Border Width",
            "type": "number",
            "default": 4,
            "control": {
              "type": "slider",
              "min": 1,
              "max": 20
            },
            "enabled": {
              "enableBorderWidth": true
            }
          },
          {
            "name": "borderColor",
            "displayName": "Border Color",
            "type": "color",
            "default": "@primary",
            "enabled": {
              "enableBorderWidth": true
            }
          },
          {
            "name": "borderStyle",
            "displayName": "Border Style",
            "type": "text",
            "default": "solid",
            "control": {
              "type": "menu",
              "options": [
                { "label": "Solid", "value": "solid" },
                { "label": "Dotted", "value": "dotted" },
                { "label": "Dashed", "value": "dashed" }
              ]
            },
            "enabled": {
              "enableBorderWidth": true
            }
          }
        ]
      }
    ]
}